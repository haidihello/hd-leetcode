package com.leetcode.editor.util;

import org.apache.commons.io.FileUtils;
import org.apache.commons.io.LineIterator;
import org.apache.commons.lang3.StringUtils;
import org.junit.Test;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

/**
 * @Author: HaiDi
 * @Date: 2022/9/19 20:29
 */

public class ReadFile {
    public static void main(String[] args) throws IOException {
        Long start = System.currentTimeMillis();
        String path = "D:\\文档\\书籍\\银联微信\\银联微信_20220811.csv";
        LineIterator it = FileUtils.lineIterator(new File(path), "UTF-8");
        List list = new ArrayList<>();
        try {
            while (it.hasNext()) {
                String line = it.nextLine();

                list.add(line);
            }
        } finally {
            LineIterator.closeQuietly(it);
        }
        System.out.println("list大小" + list.size());
        System.out.println("读取耗时：" + (System.currentTimeMillis() - start));
    }

    /**
     * 读文件生成单条sql文件
     * @throws IOException
     */
    @Test
    public void readFileToSQL() throws IOException {

        String path = "C:\\Users\\admin\\Desktop\\需求文档\\10.26协议\\银行编码.txt";
        LineIterator it = FileUtils.lineIterator(new File(path), "UTF-8");
        BufferedWriter writer = new BufferedWriter(new FileWriter(String.format("C:\\Users\\admin\\Desktop\\需求文档\\10.26协议\\银行编码base.txt")));
        List list = new ArrayList();
        try {
            int i = 0;
            while (it.hasNext()) {
                String line = it.nextLine();
                i++;
                if (i == 1) {
                    continue;
                }
                String[] strArr = line.split(",");
                String str = "insert into protocol_bank_base set "
                        + " bankCode = " + "'" + strArr[0] + "'"
                        + ",bankName=" + "'" + strArr[1] + "'";
                if (strArr.length>2) {
                   str = str + ",channelBankCode=" + "'" + strArr[2]+ "'";
                }
                str = str + ";";
                writer.write(str + System.lineSeparator());
                list.add(line);
            }
        } finally {
            writer.close();
            LineIterator.closeQuietly(it);
        }
    }
    /**
     * 处理11月分润数据
     * @throws IOException
     */
    @Test
    public void readFileToMongo() throws IOException {
        String haveAgentNum = "A151201808021549146250\n" +
                "A151201809260403560740\n" +
                "A151201809260836393370\n" +
                "A151201809301707213330\n" +
                "A151201810090413582740\n" +
                "A151201810090445158960\n" +
                "A151201810091115586620\n" +
                "A151201810120521556400\n" +
                "A151201811131026238670\n" +
                "A151201811211245077950\n" +
                "A151201811260957187230\n" +
                "A151201811280321128790\n" +
                "A151201811280518114800\n" +
                "A151201811300510349580\n" +
                "A151201812120334408820\n" +
                "A151201812120457287520\n" +
                "A151201812120519132230\n" +
                "A151201812140239015760\n" +
                "A151201812291126255760\n" +
                "A151201901030014042460\n" +
                "A151201901030222074990\n" +
                "A151201901030346071830\n" +
                "A151201901071117577740\n" +
                "A151201901071612167870\n" +
                "A151201905051110208330\n" +
                "A151201905210944162970\n" +
                "A151201905291440420900\n" +
                "A151201906111305220390\n" +
                "A151201906121506567230\n" +
                "A151201906171555365960\n" +
                "A151201906241210361840\n" +
                "A151201906270922158730\n" +
                "A151201906271424455300\n" +
                "A151201907011513298960\n" +
                "A151201907011558148140\n" +
                "A151201907031335374390\n" +
                "A151201907181459227630\n" +
                "A151201907181654064040\n" +
                "A151201907221630382420\n" +
                "A151201907230313033410\n" +
                "A151201907301429377310\n" +
                "A151201908071112058870\n" +
                "A151201908191442222400\n" +
                "A151201908270936045600\n" +
                "A151201909021740363290\n" +
                "A151201909181646404590\n" +
                "A151201910091029576630\n" +
                "A151201910151419573410\n" +
                "A151201910231345404440\n" +
                "A151201911151720307070\n" +
                "A151201911271508479140\n" +
                "A151201912031728408560\n" +
                "A151201912041411337850\n" +
                "A151201912041633045940\n" +
                "A151201912051149230250\n" +
                "A151201912060946358630\n" +
                "A151201912061052545590\n" +
                "A151201912061144001360\n" +
                "A151201912061457296480\n" +
                "A151201912101157210810\n" +
                "A151201912101345457700\n" +
                "A151201912111607270660\n" +
                "A151202003311033541980\n" +
                "A151202003311101010020\n" +
                "A151202003311137320640\n" +
                "A151202003311903113530\n" +
                "A151202004010951341910\n" +
                "A151202004011532360670\n" +
                "A151202004020931178410\n" +
                "A151202004021321023840\n" +
                "A151202004021804278980\n" +
                "A151202004021814400520\n" +
                "A151202004021831110620\n" +
                "A151202004031147084920\n" +
                "A151202004031237266990\n" +
                "A151202004031328550230\n" +
                "A151202004031520498620\n" +
                "A151202004031745488730\n" +
                "A151202004041333250480\n" +
                "A151202004051501007440\n" +
                "A151202004061046065350\n" +
                "A151202004071219570000\n" +
                "A151202004071821244210\n" +
                "A151202004081354051760\n" +
                "A151202004081529435010\n" +
                "A151202004081533409770\n" +
                "A151202004091236230300\n" +
                "A151202004091443568290\n" +
                "A151202004091617526150\n" +
                "A151202004091707276960\n" +
                "A151202004092025105110\n" +
                "A151202004101512530980\n" +
                "A151202004101533325500\n" +
                "A151202004112219284950\n" +
                "A151202004131758224300\n" +
                "A151202004141414325980\n" +
                "A151202004141550572570\n" +
                "A151202004151045302670\n" +
                "A151202004151454091560\n" +
                "A151202004151647560370\n" +
                "A151202004152205491610\n" +
                "A151202004152317463460\n" +
                "A151202004161425267650\n" +
                "A151202004161749519370\n" +
                "A151202004162131402930\n" +
                "A151202004171450428590\n" +
                "A151202004201040171490\n" +
                "A151202004201520111750\n" +
                "A151202004201530489000\n" +
                "A151202004201829408140\n" +
                "A151202004211745325660\n" +
                "A151202004221649566700\n" +
                "A151202004231307149450\n" +
                "A151202004231421038940\n" +
                "A151202004241130069200\n" +
                "A151202004271451220610\n" +
                "A151202004281453338770\n" +
                "A151202005061016506120\n" +
                "A151202005061018010880\n" +
                "A151202005091008400350\n" +
                "A151202005111120322550\n" +
                "A151202005111443128060\n" +
                "A151202005151648521400\n" +
                "A151202005211111051320\n" +
                "A151202006031731020920\n" +
                "A151202007081029081090\n" +
                "A151202008101134051110\n" +
                "A151202008241036454910\n" +
                "A151202008281039077980\n" +
                "A161201809180733204060\n" +
                "A161201809250557050980\n" +
                "A161201809260653004880\n" +
                "A161201809260858340060\n" +
                "A161201810090423516780\n" +
                "A161201810091217063260\n" +
                "A161201810100622086130\n" +
                "A161201810100808471510\n" +
                "A161201810101124191170\n" +
                "A161201810101204175590\n" +
                "A161201811280607593130\n" +
                "A161201811280633414020\n" +
                "A161201811290400407710\n" +
                "A161201811290401442340\n" +
                "A161201811290729196190\n" +
                "A161201812050856345830\n" +
                "A161201812050901284600\n" +
                "A161201812120348289890\n" +
                "A161201812120455524130\n" +
                "A161201812120508352390\n" +
                "A161201812120518407310\n" +
                "A161201812120526400350\n" +
                "A161201812120558112060\n" +
                "A161201812120627278410\n" +
                "A161201812140346171250\n" +
                "A161201812140409440330\n" +
                "A161201901030219129660\n" +
                "A161201901030219134580\n" +
                "A161201901030223339960\n" +
                "A161201901030223362660\n" +
                "A161201901030223516450\n" +
                "A161201901030232253740\n" +
                "A161201903071600301840\n" +
                "A161201904101605303220\n" +
                "A161201904271505268360\n" +
                "A161201905171051261800\n" +
                "A161201906101254250960\n" +
                "A161201906101534322080\n" +
                "A161201906121153407070\n" +
                "A161201906150928383340\n" +
                "A161201906181639044330\n" +
                "A161201906191748425340\n" +
                "A161201906201142472260\n" +
                "A161201906241647299720\n" +
                "A161201907021954126910\n" +
                "A161201907040955060650\n" +
                "A161201907041043372700\n" +
                "A161201907081634375140\n" +
                "A161201907151035195010\n" +
                "A161201907151217310170\n" +
                "A161201907230950203560\n" +
                "A161201907241043330940\n" +
                "A161201907261727321860\n" +
                "A161201907311044057970\n" +
                "A161201908051444363040\n" +
                "A161201908060011353370\n" +
                "A161201908091734558520\n" +
                "A161201908121614482180\n" +
                "A161201908131534297510\n" +
                "A161201908191518551510\n" +
                "A161201908201348552410\n" +
                "A161201908221457561500\n" +
                "A161201908281310301320\n" +
                "A161201909021121133220\n" +
                "A161201909091704405580\n" +
                "A161201909161504307960\n" +
                "A161201909190957221480\n" +
                "A161201909291034558730\n" +
                "A161201910221811469620\n" +
                "A161201911281112522030\n" +
                "A161201911301526317460\n" +
                "A161201912021426589770\n" +
                "A161201912041326306220\n" +
                "A161201912041606328730\n" +
                "A161201912041650278870\n" +
                "A161201912061015078230\n" +
                "A161201912071407128900\n" +
                "A161201912111455426960\n" +
                "A161201912111726235430\n" +
                "A161201912131659393890\n" +
                "A161201912170949138750\n" +
                "A161201912181632551790\n" +
                "A161201912261656262680\n" +
                "A161202001101720518850\n" +
                "A161202003051045253030\n" +
                "A161202003161005565030\n" +
                "A161202003281324187800\n" +
                "A161202003311504050230\n" +
                "A161202004011059552540\n" +
                "A161202004021025110980\n" +
                "A161202004021139310470\n" +
                "A161202004021712382880\n" +
                "A161202004030932366480\n" +
                "A161202004031100014930\n" +
                "A161202004041357126280\n" +
                "A161202004061834058290\n" +
                "A161202004071134539290\n" +
                "A161202004071410082610\n" +
                "A161202004071530506310\n" +
                "A161202004081100002960\n" +
                "A161202004081148520720\n" +
                "A161202004081247416020\n" +
                "A161202004101016009610\n" +
                "A161202004101554390830\n" +
                "A161202004101625483290\n" +
                "A161202004111514218040\n" +
                "A161202004121632405340\n" +
                "A161202004131100326420\n" +
                "A161202004141115394690\n" +
                "A161202004141651585650\n" +
                "A161202004152057173930\n" +
                "A161202004171541393450\n" +
                "A161202004200935216020\n" +
                "A161202004201511416560\n" +
                "A161202004211104154100\n" +
                "A161202004211732501600\n" +
                "A161202004231156040220\n" +
                "A161202004241211510880\n" +
                "A161202004241333297610\n" +
                "A161202004281056376220\n" +
                "A161202005061631352120\n" +
                "A161202005061748062340\n" +
                "A161202005091654315860\n" +
                "A161202005111555080920\n" +
                "A161202005122332251960\n" +
                "A161202005131133306050\n" +
                "A161202005131630170680\n" +
                "A161202005131631178670\n" +
                "A161202005150856573560\n" +
                "A161202005241704379270\n" +
                "A161202005251213004650\n" +
                "A161202006051456148270\n" +
                "A161202006180949546980\n" +
                "A161202007151130181040\n" +
                "A161202009071643433200\n" +
                "A161202012011231009330\n" +
                "A161202101121459590730\n" +
                "A161202101131631219730\n" +
                "A161202106091055108010\n" +
                "A171201808101652378600\n" +
                "A171201809190544369910\n" +
                "A171201809250610491310\n" +
                "A171201809260541484210\n" +
                "A171201810090321423720\n" +
                "A171201810120600419380\n" +
                "A171201810160544246420\n" +
                "A171201810240820498160\n" +
                "A171201811051727319030\n" +
                "A171201811071006149340\n" +
                "A171201811221718136690\n" +
                "A171201811260709160100\n" +
                "A171201811280216510840\n" +
                "A171201811280358134430\n" +
                "A171201811290230130080\n" +
                "A171201812050312162570\n" +
                "A171201812050842027130\n" +
                "A171201812050850340370\n" +
                "A171201812050856163930\n" +
                "A171201812061624423480\n" +
                "A171201812071027031870\n" +
                "A171201812120350051040\n" +
                "A171201812120351366850\n" +
                "A171201812120422207780\n" +
                "A171201812120436069230\n" +
                "A171201812120507358150\n" +
                "A171201812120508565280\n" +
                "A171201812120616275800\n" +
                "A171201812120716030590\n" +
                "A171201812140200154290\n" +
                "A171201812140248207080\n" +
                "A171201812140344520020\n" +
                "A171201812140351058390\n" +
                "A171201901022348355961\n" +
                "A171201901030013167540\n" +
                "A171201901030227084510\n" +
                "A171201901030227242530\n" +
                "A171201901030328202710\n" +
                "A171201901291411004680\n" +
                "A171201903011722007700\n" +
                "A171201903070852329830\n" +
                "A171201905051002147410\n" +
                "A171201905160914204610\n" +
                "A171201906041518104930\n" +
                "A171201906041630248400\n" +
                "A171201906211539124660\n" +
                "A171201906241240113340\n" +
                "A171201906241403216210\n" +
                "A171201906271220194490\n" +
                "A171201906271956330680\n" +
                "A171201906281738568830\n" +
                "A171201907091443047210\n" +
                "A171201907241142066120\n" +
                "A171201907261428543870\n" +
                "A171201908121111516730\n" +
                "A171201908141648500200\n" +
                "A171201908211337307490\n" +
                "A171201908231622518860\n" +
                "A171201908261423054270\n" +
                "A171201908261518487790\n" +
                "A171201908281710375150\n" +
                "A171201909120918224920\n" +
                "A171201909190938358670\n" +
                "A171201909191455488940\n" +
                "A171201910091206545930\n" +
                "A171201910121508566010\n" +
                "A171201910141724205380\n" +
                "A171201911051443561480\n" +
                "A171201911071425525850\n" +
                "A171201911281043219370\n" +
                "A171201911291659253000\n" +
                "A171201912021154577910\n" +
                "A171201912021648055120\n" +
                "A171201912031038163510\n" +
                "A171201912090958339830\n" +
                "A171201912091540168820\n" +
                "A171201912121457073920\n" +
                "A171201912131023087050\n" +
                "A171201912161048402500\n" +
                "A171201912191000323740\n" +
                "A171201912251024031170\n" +
                "A171201912301430319510\n" +
                "A171202001091516573700\n" +
                "A171202001141426180020\n" +
                "A171202002232130482950\n" +
                "A171202003241415525370\n" +
                "A171202003301914561720\n" +
                "A171202004011234399700\n" +
                "A171202004011509337170\n" +
                "A171202004021020203350\n" +
                "A171202004021732407260\n" +
                "A171202004030858087070\n" +
                "A171202004031311033470\n" +
                "A171202004031321510460\n" +
                "A171202004031525220250\n" +
                "A171202004061031075240\n" +
                "A171202004071007557470\n" +
                "A171202004071035377300\n" +
                "A171202004071055599250\n" +
                "A171202004071142372620\n" +
                "A171202004071519221830\n" +
                "A171202004071901057130\n" +
                "A171202004081631545490\n" +
                "A171202004081739045710\n" +
                "A171202004101040038480\n" +
                "A171202004101630450520\n" +
                "A171202004101711095370\n" +
                "A171202004101753359560\n" +
                "A171202004111150490480\n" +
                "A171202004111509503230\n" +
                "A171202004131002127140\n" +
                "A171202004131057455550\n" +
                "A171202004131538210790\n" +
                "A171202004131624440790\n" +
                "A171202004131821353520\n" +
                "A171202004161123417060\n" +
                "A171202004161400416020\n" +
                "A171202004211137195800\n" +
                "A171202004211354303980\n" +
                "A171202004231049381170\n" +
                "A171202004231833027860\n" +
                "A171202004252257422420\n" +
                "A171202004291434288050\n" +
                "A171202004301134051370\n" +
                "A171202005061212132870\n" +
                "A171202005081430379620\n" +
                "A171202005091005086150\n" +
                "A171202005151611010900\n" +
                "A171202005151655342970\n" +
                "A171202005181518137800\n" +
                "A171202005190014087170\n" +
                "A171202005261213534620\n" +
                "A171202006041037564390\n" +
                "A171202006101525207000\n" +
                "A171202006161744199840\n" +
                "A171202008181025542100\n" +
                "A171202011131017160610\n" +
                "A171202011191635460320\n" +
                "A171202011231421505740\n" +
                "A171202103231704038770\n";
        String path = "C:\\Users\\admin\\Desktop\\online\\2023-0302非直营分润处理\\调整金额.csv";
        LineIterator it = FileUtils.lineIterator(new File(path), "UTF-8");
        BufferedWriter writer = new BufferedWriter(new FileWriter(String.format("C:\\Users\\admin\\Desktop\\online\\2023-0302非直营分润处理\\03月非直营分润数据处理408sql.txt")));
        List list = new ArrayList();
        try {
            int i = 0;
            while (it.hasNext()) {
                String line = it.nextLine();
                i++;
                if (i == 1) {
                    continue;
                }
                String[] strArr = line.split(",");
                if (StringUtils.isBlank(strArr[0])) {
                    break;
                }
                if (!haveAgentNum.contains(strArr[0])) {
                    continue;
                }
                String str = " db.getCollection(\"month_new_profit_bd\").update({\"agentNum\":"
                        + "\"" + strArr[0] + "\","
                        + "\"monthProfitDate\":\"2023-02\"},"
                        + "{ $inc: { totalMonthAccountDecreaseAmt: NumberLong(" + strArr[1] + ") } });";
                writer.write(str + System.lineSeparator());
                list.add(line);
            }
        } finally {
            writer.close();
            it.close();
            LineIterator.closeQuietly(it);
        }
    }

    @Test
    public void stingTest() {
        String[] strArr = {"A171201809250612351520","济南风雨人商贸有限公司","301"};

        String str = " db.getCollection(\"month_new_profit_bd\").update({\"agentNum\":"
                + "\"" + strArr[0] + "\","
                + "\"monthProfitDate\":\"2022-11\"},"
                + "{ $inc: { totalDayAccountDecreaseAmt: NumberLong(" + strArr[2] + ") } })";
        System.out.println(str);

    }
    /*
    *处理表格数据
     */
    @Test
    public void readFileToCSV() throws IOException {

        String path = "C:\\Users\\admin\\Desktop\\需求文档\\10.26协议\\银行编码.txt";
        LineIterator it = FileUtils.lineIterator(new File(path), "UTF-8");
        BufferedWriter writer = new BufferedWriter(new FileWriter(String.format("C:\\Users\\admin\\Desktop\\需求文档\\10.26协议\\银行编码base.txt")));
        List list = new ArrayList();
        try {
            int i = 0;
            while (it.hasNext()) {
                String line = it.nextLine();
                i++;
                if (i == 1) {
                    continue;
                }
                String[] strArr = line.split(",");
                String str = "insert into protocol_bank_base set "
                        + " bankCode = " + "'" + strArr[0] + "'"
                        + ",bankName=" + "'" + strArr[1] + "'";
                if (strArr.length>2) {
                    str = str + ",channelBankCode=" + "'" + strArr[2]+ "'";
                }
                str = str + ";";
                writer.write(str + System.lineSeparator());
                list.add(line);
            }
        } finally {
            writer.close();
            LineIterator.closeQuietly(it);
        }
    }
    //读EXCEL文件
    @Test
    public void readExecl() throws IOException {
        String path = "C:\\Users\\admin\\Desktop\\online\\test.xlsx";
        HashMap<String, ArrayList<ArrayList<String>>> map =  ReadExcelUtil.readExcel(new File(path), 0);
        List list = map.get("sheet0");

    }

    @Test
    public void insert() throws IOException {
        String path = "C:\\Users\\admin\\Desktop\\online\\2023-0302非直营分润处理\\调整金额.csv";
        LineIterator it = FileUtils.lineIterator(new File(path), "UTF-8");
        BufferedWriter writer = new BufferedWriter(new FileWriter(String.format("C:\\Users\\admin\\Desktop\\online\\2023-0302非直营分润处理\\03月非直营分润数据处理408sql.txt")));
        List list = new ArrayList();
        try {
            int i = 0;
            while (it.hasNext()) {
                String line = it.nextLine();
                i++;
                if (i == 1) {
                    continue;
                }
                String[] strArr = line.split(",");
                if (StringUtils.isBlank(strArr[0])) {
                    break;
                }
                String str = " db.getCollection(\"month_profit_deduct\").insert({\"agentNum\":"
                        + "\"" + strArr[0] + "\","
                        + "\"agentNum\": NumberLong(" + strArr[1] + ")  });";
                writer.write(str + System.lineSeparator());
                list.add(line);
            }
        } finally {
            writer.close();
            it.close();
            LineIterator.closeQuietly(it);
        }
    }

}
